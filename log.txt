(llm_search) macsilva@macsilva-81CQ:~/llm_search$ python run.py -cs=dfs -csg=propose-all -sl=strong
The `load_in_4bit` and `load_in_8bit` arguments are deprecated and will be removed in the future versions. Please, pass a `BitsAndBytesConfig` object in `quantization_config` argument instead.
`low_cpu_mem_usage` was None, now default to True since model is quantized.
Sliding Window Attention is enabled but not implemented for `sdpa`; unexpected results may be encountered.
Loading checkpoint shards: 100%|████████████████████████████████████████████████████████████████████████████████████████████████| 2/2 [00:03<00:00,  1.64s/it]
dfs(1 2 4 6, 3)
Generating successors for state 1 2 4 6.
Device set to use cuda:0
['1 + 2 = 3 (left: 3 4 6)\n1 + 4 = 5 (left: 3 4 6)\n1 + 6 = 7 (left: 3 4 6)\n2 + 1 = 3 (left: 3 4 6)\n2 + 4 = 6 (left: 3 4 6)\n2 + 6 = 8 (left: 3 4 6)\n4 + 1 = 5 (left: 3 4 6)\n4 + 2 = 6 (left: 3 4 6)\n4 + 6 = 10 (left: 3 4 10)\n6 + 1 = 7 (left: 3 4 6)\n6 + 2 = 8 (left: 3 4 6)\n6 + 4 = 10 (left: 3 4 10)\n1 - 2 = -1 (left: -1 4 6)\n1 - 4 = -3 (left: -1 4 6)\n1 - 6 = -5 (left: -1 4 6)\n2 - 1 = 1 (left: 3 4 6)\n2 - 4 = -2 (left: 3 4 6)\n2 - 6 = -4 (left: 3 4 6)\n4 - 1 = 3 (left: 3 4 6)\n4 - 2 = 2 (left: 3 4 6)\n4 - 6 = -2 (left: 3 4 6)\n6 - 1 = 5 (left: 3 4 6)\n6 - 2 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 3 4 2)\n1 * 2 = 2 (left: 2 4 6)\n1 * 4 = 4 (left: 2 4 6)\n1 * 6 = 6 (left: 2 4 6)\n2 * 1 = 2 (left: 2 4 6)\n2 * 4 = 8 (left: 2 4 6)\n2 * 6 = 12 (left: 2 4 12)\n4 * 1 = 4 (left: 2 4 6)\n4 * 2 = 8 (left: 2 4 6)\n4 * 6 = 24 (left: 2 4 24)\n6 * 1 = 6 (left: 2 4 6)\n6 * 2 = 12 (left: 2 4 12)\n6 * 4 = 24 (left: 2 4 24)\n1 / 2 = 0.5 (left: 0.5 4 6)\n1 / 4 = 0.25 (left: 0.5 4 6)\n1 / 6 = 0.1667 (left: 0.5 4 6)\n2 / 1 = 2.0 (left: 2 4 6)\n2 / 4 = 0.5 (left: 2 4 6)\n2 / 6 = 0.3333 (left: 2 4 6)\n4 / 1 = 4.0 (left: 2 4 6)\n4 / 2 = 2.0 (left: 2 4 6)\n4 / 4 = 1.0 (left: 2 4 6)\n6 / 1 = 6.0 (left: 2 4 6)\n6 / 2 = 3.0 (left: 2 4 6)\n6 / 4 = 1.5 (left: 2 4 6)\n1 + 4 = 5 (left: 1 5 6)\n1 + 6 = 7 (left: 1 5 6)\n4 + 1 = 5 (left: 1 5 6)\n4 + 6 = 10 (left: 1 5 10)\n6 + 1 = 7 (left: 1 5 6)\n6 + 4 = 10 (left: 1 5 10)\n1 - 4 = -3 (left: -3 5 6)\n1 - 6 = -5 (left: -3']
1 2 4 6 ---[1 + 2 = 3 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[1 + 4 = 5 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[1 + 6 = 7 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[2 + 1 = 3 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[2 + 4 = 6 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[2 + 6 = 8 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[4 + 1 = 5 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[4 + 2 = 6 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[4 + 6 = 10 (left: 3 4 10)]--> 3 4 10
1 2 4 6 ---[6 + 1 = 7 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[6 + 2 = 8 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[6 + 4 = 10 (left: 3 4 10)]--> 3 4 10
1 2 4 6 ---[2 - 1 = 1 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[4 - 1 = 3 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[4 - 2 = 2 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[6 - 1 = 5 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[6 - 2 = 4 (left: 3 4 6)]--> 3 4 6
1 2 4 6 ---[6 - 4 = 2 (left: 3 4 2)]--> 3 4 2
1 2 4 6 ---[1 * 2 = 2 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[1 * 4 = 4 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[1 * 6 = 6 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[2 * 1 = 2 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[2 * 4 = 8 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[2 * 6 = 12 (left: 2 4 12)]--> 2 4 12
1 2 4 6 ---[4 * 1 = 4 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[4 * 2 = 8 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[4 * 6 = 24 (left: 2 4 24)]--> 2 4 24
1 2 4 6 ---[6 * 1 = 6 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[6 * 2 = 12 (left: 2 4 12)]--> 2 4 12
1 2 4 6 ---[6 * 4 = 24 (left: 2 4 24)]--> 2 4 24
1 2 4 6 ---[1 / 2 = 0.5 (left: 0.5 4 6)]--> 0.5 4 6
1 2 4 6 ---[1 / 4 = 0.25 (left: 0.5 4 6)]--> 0.5 4 6
1 2 4 6 ---[1 / 6 = 0.1667 (left: 0.5 4 6)]--> 0.5 4 6
1 2 4 6 ---[2 / 1 = 2.0 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[2 / 4 = 0.5 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[2 / 6 = 0.3333 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[4 / 1 = 4.0 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[4 / 2 = 2.0 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[4 / 4 = 1.0 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[6 / 1 = 6.0 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[6 / 2 = 3.0 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[6 / 4 = 1.5 (left: 2 4 6)]--> 2 4 6
1 2 4 6 ---[1 + 4 = 5 (left: 1 5 6)]--> 1 5 6
1 2 4 6 ---[1 + 6 = 7 (left: 1 5 6)]--> 1 5 6
1 2 4 6 ---[4 + 1 = 5 (left: 1 5 6)]--> 1 5 6
1 2 4 6 ---[4 + 6 = 10 (left: 1 5 10)]--> 1 5 10
1 2 4 6 ---[6 + 1 = 7 (left: 1 5 6)]--> 1 5 6
1 2 4 6 ---[6 + 4 = 10 (left: 1 5 10)]--> 1 5 10
dfs(3 4 6, 2)
Generating successors for state 3 4 6.
Device set to use cuda:0
['3 + 4 = 7 (left: 7 6)\n3 - 4 = -1 (left: -1 6)\n3 * 4 = 12 (left: 12 6)\n3 / 4 = 0.75 (left: 0.75 6)\n3 + 6 = 9 (left: 7 9)\n3 - 6 = -3 (left: -3 7)\n3 * 6 = 18 (left: 7 18)\n3 / 6 = 0.5 (left: 0.5 7)\n4 + 3 = 7 (left: 7 6)\n4 - 3 = 1 (left: 1 6)\n4 * 3 = 12 (left: 12 6)\n4 / 3 = 1.33 (left: 1.33 6)\n4 + 6 = 10 (left: 7 10)\n4 - 6 = -2 (left: -2 7)\n4 * 6 = 24 (left: 7 24)\n4 / 6 = 0.67 (left: 0.67 7)\n6 + 3 = 9 (left: 7 9)\n6 - 3 = 3 (left: 3 9)\n6 * 3 = 18 (left: 3 18)\n6 / 3 = 2.0 (left: 2.0 9)']
3 4 6 ---[3 + 4 = 7 (left: 7 6)]--> 7 6
3 4 6 ---[3 * 4 = 12 (left: 12 6)]--> 12 6
3 4 6 ---[3 / 4 = 0.75 (left: 0.75 6)]--> 0.75 6
3 4 6 ---[3 + 6 = 9 (left: 7 9)]--> 7 9
3 4 6 ---[3 * 6 = 18 (left: 7 18)]--> 7 18
3 4 6 ---[3 / 6 = 0.5 (left: 0.5 7)]--> 0.5 7
3 4 6 ---[4 + 3 = 7 (left: 7 6)]--> 7 6
3 4 6 ---[4 - 3 = 1 (left: 1 6)]--> 1 6
3 4 6 ---[4 * 3 = 12 (left: 12 6)]--> 12 6
3 4 6 ---[4 / 3 = 1.33 (left: 1.33 6)]--> 1.33 6
3 4 6 ---[4 + 6 = 10 (left: 7 10)]--> 7 10
3 4 6 ---[4 * 6 = 24 (left: 7 24)]--> 7 24
3 4 6 ---[4 / 6 = 0.67 (left: 0.67 7)]--> 0.67 7
3 4 6 ---[6 + 3 = 9 (left: 7 9)]--> 7 9
3 4 6 ---[6 - 3 = 3 (left: 3 9)]--> 3 9
3 4 6 ---[6 * 3 = 18 (left: 3 18)]--> 3 18
3 4 6 ---[6 / 3 = 2.0 (left: 2.0 9)]--> 2.0 9
dfs(7 6, 1)
Generating successors for state 7 6.
Device set to use cuda:0
['7 + 6 = 13 (left: 13)\n7 - 6 = 1 (left: 1 13)\n7 * 6 = 42 (left: 42 13)\n7 / 6 = 1.17 (left: 1.17 13)\n7 + 1 = 8 (left: 8 13)\n7 - 1 = 6 (left: 6 13)\n7 * 1 = 7 (left: 7 13)\n7 / 1 = 7.0 (left: 7.0 13)\n7 + 6 = 13 (left: 13 13)\n7 - 6 = 1 (left: 1 13)\n7 * 6 = 42 (left: 42 13)\n7 / 6 = 1.17 (left: 1.17 13)']
7 6 ---[7 + 6 = 13 (left: 13)]--> 13
7 6 ---[7 - 6 = 1 (left: 1 13)]--> 1 13
7 6 ---[7 * 6 = 42 (left: 42 13)]--> 42 13
7 6 ---[7 / 6 = 1.17 (left: 1.17 13)]--> 1.17 13
7 6 ---[7 + 1 = 8 (left: 8 13)]--> 8 13
7 6 ---[7 - 1 = 6 (left: 6 13)]--> 6 13
7 6 ---[7 * 1 = 7 (left: 7 13)]--> 7 13
7 6 ---[7 / 1 = 7.0 (left: 7.0 13)]--> 7.0 13
7 6 ---[7 + 6 = 13 (left: 13 13)]--> 13 13
dfs(13, 0)
dfs(1 13, 0)
dfs(42 13, 0)
dfs(1.17 13, 0)
dfs(8 13, 0)
dfs(6 13, 0)
dfs(7 13, 0)
dfs(7.0 13, 0)
dfs(13 13, 0)
dfs(1 13, 0)
dfs(42 13, 0)
dfs(1.17 13, 0)
dfs(12 6, 1)
Symmetry (strong) detected between states 12 6 and 7 6; prunning this branch.
Traceback (most recent call last):
  File "/home/macsilva/llm_search/run.py", line 82, in <module>
    final_state = solver.solve(initial_state)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/macsilva/llm_search/src/llm_search/solver.py", line 90, in solve
    return self.dfs(initial_state, self.steps, states_explored_by_depth)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/macsilva/llm_search/src/llm_search/solver.py", line 83, in dfs
    result = self.dfs(succ, steps - 1, explored_states_by_depth)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/macsilva/llm_search/src/llm_search/solver.py", line 83, in dfs
    result = self.dfs(succ, steps - 1, explored_states_by_depth)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/macsilva/llm_search/src/llm_search/solver.py", line 74, in dfs
    if self.check_symmetries(state, explored_state):
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/macsilva/llm_search/src/llm_search/solver.py", line 50, in check_symmetries
    tokenized_s1 = sorted(self._sucessor_generator.tokenize(s1._data))
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'ProposeAllModelBasedSuccessorGenerator' object has no attribute 'tokenize'
